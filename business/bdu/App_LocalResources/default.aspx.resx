<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="center_box.text" xml:space="preserve">
    <value>고객 요구사항</value>
  </data>
  <data name="center_txt1.text" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="center_txt2.text" xml:space="preserve">
    <value>ORDER TYPE</value>
  </data>
  <data name="con3_tit1.text" xml:space="preserve">
    <value>BDU 디자인</value>
  </data>
  <data name="con3_tit2.text" xml:space="preserve">
    <value>열 분석</value>
  </data>
  <data name="con3_tit3.text" xml:space="preserve">
    <value>랜덤 진동 분석</value>
  </data>
  <data name="con3_tit4.text" xml:space="preserve">
    <value>절연 분석</value>
  </data>
  <data name="con3_tit5.text" xml:space="preserve">
    <value>모델 분석</value>
  </data>
  <data name="img1.text" xml:space="preserve">
    <value>&lt;img src="/common/img/ko/business/img_bdu_detail.jpg" alt="주요 부품"&gt;</value>
  </data>
  <data name="info_ab_txt1.text" xml:space="preserve">
    <value>검증 및 개선방안 피드백</value>
  </data>
  <data name="info_a_txt1.text" xml:space="preserve">
    <value>제품 &amp; 프로세스 디자인&lt;br&gt;시뮬레이션&lt;br&gt;부품 소싱&lt;br&gt;프로토타입 &amp; 파일럿&lt;br&gt;시험&lt;br&gt;제품 출시</value>
  </data>
  <data name="info_b_txt1.text" xml:space="preserve">
    <value>고객요구 만족 디자인&lt;br&gt;프로토타입 &amp; 파일럿&lt;br&gt;시험&lt;br&gt;제품 출시</value>
  </data>
  <data name="info_txt1.text" xml:space="preserve">
    <value>BDU (Battery Disconnect Unit)는 Relay와 전류 센서, Pre-charge 저항, 퓨즈 등이 조합된 모듈로서 &lt;br&gt;배터리와 인버터 사이에 장착되는 제품입니다. BDU는 고객 요구 사항에 맞추어 개발됩니다.</value>
  </data>
  <data name="info_txt2.text" xml:space="preserve">
    <value>위급상황 시에 &lt;br&gt;HV 시스템을 차단함</value>
  </data>
  <data name="info_txt3.text" xml:space="preserve">
    <value>HV시스템의 &lt;br&gt;Ripple Noise를 감소</value>
  </data>
  <data name="list_desc1.text" xml:space="preserve">
    <value>정격전류&lt;br&gt;
                                                정격전압&lt;br&gt;
                                                전류용량&lt;br&gt;
                                                접촉저항&lt;br&gt;
                                                단략전류&lt;br&gt;
                                                절연저항</value>
  </data>
  <data name="list_desc2.text" xml:space="preserve">
    <value>사이즈&lt;br&gt;
                                                무게&lt;br&gt;
                                                레이아웃&lt;br&gt;
                                                장착 위치&lt;br&gt;
                                                방전/방수 등급&lt;br&gt;
                                                기계적 충격&lt;br&gt;
                                                랜덤 진동</value>
  </data>
  <data name="list_desc3.text" xml:space="preserve">
    <value>정상 작동 온도&lt;br&gt;
                                                습도&lt;br&gt;
                                                열충격&lt;br&gt;
                                                물분사&lt;br&gt;
                                                염무 분사</value>
  </data>
  <data name="list_tit1.text" xml:space="preserve">
    <value>전기적 성능</value>
  </data>
  <data name="list_tit2.text" xml:space="preserve">
    <value>제품 배치 정보</value>
  </data>
  <data name="list_tit3.text" xml:space="preserve">
    <value>환경조건</value>
  </data>
  <data name="list_txt1.text" xml:space="preserve">
    <value>추가 부품</value>
  </data>
  <data name="m_con3_tit2.text" xml:space="preserve">
    <value>열 분석</value>
  </data>
  <data name="m_con3_tit3.text" xml:space="preserve">
    <value>절연 분석</value>
  </data>
  <data name="m_con3_tit4.text" xml:space="preserve">
    <value>랜덤 진동 분석</value>
  </data>
  <data name="m_con3_tit5.text" xml:space="preserve">
    <value>모델 분석</value>
  </data>
  <data name="m_img1.text" xml:space="preserve">
    <value>&lt;img src="/common/img/ko/business/mobile/img_bdu_detail.jpg" alt="주요 부품"&gt;</value>
  </data>
  <data name="m_info_txt1.text" xml:space="preserve">
    <value>BDU (Battery Disconnect Unit)는 Relay와 &lt;br&gt;전류 센서, Pre-charge 저항, 퓨즈 등이 &lt;br&gt;조합된 모듈로서 배터리와 인버터 사이에 &lt;br&gt;장착되는 제품입니다. &lt;br&gt;BDU는 고객 요구 사항에 맞추어 개발됩니다.</value>
  </data>
  <data name="m_info_txt2.text" xml:space="preserve">
    <value>위급상황 시에 &lt;br&gt;HV 시스템을 차단함</value>
  </data>
  <data name="m_info_txt3.text" xml:space="preserve">
    <value>HV시스템의 &lt;br&gt;Ripple Noise를 감소</value>
  </data>
  <data name="m_list_desc1.text" xml:space="preserve">
    <value>&lt;span&gt;정격전류&lt;br&gt;정격전압&lt;br&gt;전류용량&lt;/span&gt;
                                                &lt;span&gt;접촉저항&lt;br&gt;단략전류&lt;br&gt;절연저항&lt;/span&gt;</value>
  </data>
  <data name="m_list_desc2.text" xml:space="preserve">
    <value>&lt;span&gt;사이즈&lt;br&gt;무게&lt;br&gt;레이아웃&lt;br&gt;장착 위치&lt;/span&gt;
                                                &lt;span&gt;방전/방수 등급&lt;br&gt;기계적 충격&lt;br&gt;랜덤 진동&lt;/span&gt;</value>
  </data>
  <data name="m_list_desc3.text" xml:space="preserve">
    <value>&lt;span&gt;정상 작동 온도&lt;br&gt;습도&lt;br&gt;열충격&lt;/span&gt;
                                                &lt;span&gt;물분사&lt;br&gt;염무 분사&lt;/span&gt;</value>
  </data>
  <data name="m_list_tit1.text" xml:space="preserve">
    <value>전기적 성능</value>
  </data>
  <data name="m_list_tit2.text" xml:space="preserve">
    <value>제품 배치 정보</value>
  </data>
  <data name="m_list_tit3.text" xml:space="preserve">
    <value>환경조건</value>
  </data>
  <data name="m_list_txt1.text" xml:space="preserve">
    <value>추가 부품</value>
  </data>
  <data name="txt_tit1.text" xml:space="preserve">
    <value>개발 프로세스</value>
  </data>
  <data name="txt_tit2.text" xml:space="preserve">
    <value>주요 부품</value>
  </data>
  <data name="txt_tit3.text" xml:space="preserve">
    <value>디자인 프로세스</value>
  </data>
  <data name="txt_tit4.text" xml:space="preserve">
    <value>납품 실적</value>
  </data>
  <data name="type_txt1.text" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="type_txt2.text" xml:space="preserve">
    <value>Build to Print</value>
  </data>
  <data name="vis_tit.text" xml:space="preserve">
    <value>LS e-모빌리티솔루션 사업소개</value>
  </data>
</root>